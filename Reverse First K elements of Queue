Given an integer K and a queue of integers, we need to reverse the order of the first K elements of the queue, leaving the other elements in the same relative order.

Only following standard operations are allowed on queue.

enqueue(x) : Add an item x to rear of queue
dequeue() : Remove an item from front of queue
size() : Returns number of elements in queue.
front() : Finds front item.
Note: The above operations represent the general processings. In-built functions of the respective languages can be used to solve the problem.
============================================================================================================================================================================================
code
===========================================================================================================================================================================================
class GfG {
    // Function to reverse first k elements of a queue.
    public Queue<Integer> modifyQueue(Queue<Integer> q, int k) {
        // add code here.
        ArrayList<Integer> li = new ArrayList<>();
        for(int i=0;i<k;i++){
            li.add(q.remove());
        }
        Collections.reverse(li);
        while(q.size()>0) li.add(q.remove());
        //System.out.println(li);
        for(int i=0;i<li.size();i++) q.add(li.get(i));
        return q;
    }
}
